"""2_relationships

Revision ID: fef7d077d7f8
Revises: fc6807e9aa5b
Create Date: 2022-08-31 13:34:26.498343

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fef7d077d7f8'
down_revision = 'fc6807e9aa5b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('bids', sa.Column('user_id', sa.Integer(), nullable=True))
    op.add_column('bids', sa.Column('lot_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'bids', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'bids', 'lots', ['lot_id'], ['id'])
    op.add_column('lots', sa.Column('owner_id', sa.Integer(), nullable=True))
    op.add_column('lots', sa.Column('room_id', sa.Integer(), nullable=True))
    op.alter_column('lots', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_foreign_key(None, 'lots', 'rooms', ['room_id'], ['id'])
    op.create_foreign_key(None, 'lots', 'users', ['owner_id'], ['id'])
    op.drop_column('lots', 'edited_at')
    op.add_column('rooms_users', sa.Column('member_id', sa.Integer(), nullable=True))
    op.add_column('rooms_users', sa.Column('room_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'rooms_users', 'users', ['member_id'], ['id'])
    op.create_foreign_key(None, 'rooms_users', 'rooms', ['room_id'], ['id'])
    op.add_column('users', sa.Column('username', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('email', sa.String(), nullable=True))
    op.add_column('users', sa.Column('password', sa.String(length=50), nullable=True))
    op.create_unique_constraint(None, 'users', ['username'])
    op.create_unique_constraint(None, 'users', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'password')
    op.drop_column('users', 'email')
    op.drop_column('users', 'username')
    op.drop_constraint(None, 'rooms_users', type_='foreignkey')
    op.drop_constraint(None, 'rooms_users', type_='foreignkey')
    op.drop_column('rooms_users', 'room_id')
    op.drop_column('rooms_users', 'member_id')
    op.add_column('lots', sa.Column('edited_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'lots', type_='foreignkey')
    op.drop_constraint(None, 'lots', type_='foreignkey')
    op.alter_column('lots', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('lots', 'room_id')
    op.drop_column('lots', 'owner_id')
    op.drop_constraint(None, 'bids', type_='foreignkey')
    op.drop_constraint(None, 'bids', type_='foreignkey')
    op.drop_column('bids', 'lot_id')
    op.drop_column('bids', 'user_id')
    # ### end Alembic commands ###
